{"filter":false,"title":"MessageSent.php","tooltip":"/cms/app/Events/MessageSent.php","undoManager":{"mark":8,"position":8,"stack":[[{"start":{"row":3,"column":0},"end":{"row":4,"column":0},"action":"insert","lines":["",""],"id":2}],[{"start":{"row":4,"column":0},"end":{"row":5,"column":0},"action":"insert","lines":["",""],"id":3}],[{"start":{"row":4,"column":0},"end":{"row":11,"column":54},"action":"remove","lines":["","","use Illuminate\\Broadcasting\\Channel;","use Illuminate\\Queue\\SerializesModels;","use Illuminate\\Broadcasting\\PrivateChannel;","use Illuminate\\Broadcasting\\PresenceChannel;","use Illuminate\\Broadcasting\\InteractsWithSockets;","use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;"],"id":7},{"start":{"row":4,"column":0},"end":{"row":12,"column":54},"action":"insert","lines":["use App\\User;","use App\\Message;","use Illuminate\\Broadcasting\\Channel;","use Illuminate\\Queue\\SerializesModels;","use Illuminate\\Broadcasting\\PrivateChannel;","use Illuminate\\Broadcasting\\PresenceChannel;","use Illuminate\\Foundation\\Events\\Dispatchable;","use Illuminate\\Broadcasting\\InteractsWithSockets;","use Illuminate\\Contracts\\Broadcasting\\ShouldBroadcast;"]}],[{"start":{"row":14,"column":0},"end":{"row":37,"column":1},"action":"remove","lines":["class MessageSent","{","    use InteractsWithSockets, SerializesModels;","","    /**","     * Create a new event instance.","     *","     * @return void","     */","    public function __construct()","    {","        //","    }","","    /**","     * Get the channels the event should broadcast on.","     *","     * @return Channel|array","     */","    public function broadcastOn()","    {","        return new PrivateChannel('channel-name');","    }","}"],"id":8},{"start":{"row":14,"column":0},"end":{"row":52,"column":1},"action":"insert","lines":["class MessageSent implements ShouldBroadcast","{","    use Dispatchable, InteractsWithSockets, SerializesModels;","","    /**","     * User that sent the message","     *","     * @var User","     */","    public $user;","","    /**","     * Message details","     *","     * @var Message","     */","    public $message;","","    /**","     * Create a new event instance.","     *","     * @return void","     */","    public function __construct(User $user, Message $message)","    {","        $this->user = $user;","        $this->message = $message;","    }","","    /**","     * Get the channels the event should broadcast on.","     *","     * @return Channel|array","     */","    public function broadcastOn()","    {","        return new PrivateChannel('chat');","    }","}"]}],[{"start":{"row":50,"column":39},"end":{"row":50,"column":40},"action":"insert","lines":["/"],"id":9}],[{"start":{"row":50,"column":40},"end":{"row":50,"column":41},"action":"insert","lines":["c"],"id":10}],[{"start":{"row":50,"column":41},"end":{"row":50,"column":42},"action":"insert","lines":["h"],"id":11}],[{"start":{"row":50,"column":42},"end":{"row":50,"column":43},"action":"insert","lines":["a"],"id":12}],[{"start":{"row":50,"column":43},"end":{"row":50,"column":44},"action":"insert","lines":["t"],"id":13}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":50,"column":44},"end":{"row":50,"column":44},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1557832447090,"hash":"06999c05360c02246923296a4869de2bcf78328f"}